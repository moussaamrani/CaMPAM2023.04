@article{Favre2005,
   author = {Jean Marie Favre},
   url = {\url{https://doi.org/10.1109/IWPSE.2005.22}},
   isbn = {0769523498},
   journal = {International Workshop on Principles of Software Evolution (IWPSE)},
   pages = {33-42},
   title = {Languages evolve too! Changing the software time scale},
   volume = {2005},
   year = {2005},
}

@article{Herrmannsdoerfer2011,
   author = {Markus Herrmannsdoerfer and Sander D. Vermolen and Guido Wachsmuth},
   url = {\url{https://doi.org/10.1007/978-3-642-19440-5\_10}},
   isbn = {9783642194399},
   issn = {03029743},
   journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
   pages = {163-182},
   publisher = {Springer, Berlin, Heidelberg},
   title = {An extensive catalog of operators for the coupled evolution of metamodels and models},
   volume = {6563 LNCS},
   year = {2011},
}

@article{Khelladi2015,
   author = {Djamel Eddine Khelladi and Regina Hebig and Reda Bendraou and Jacques Robin and Marie Pierre Gervais},
   url = {\url{https://doi.org/10.1007/978-3-319-19069-3\_17}},
   isbn = {9783319190686},
   issn = {16113349},
   journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
   keywords = {Complex change,Detection,Evolution,Metamodel},
   pages = {263-278},
   publisher = {Springer Verlag},
   title = {Detecting complex changes during metamodel evolution},
   volume = {9097},
   year = {2015},
}

@article{Bettini2022,
   author = {Lorenzo Bettini and Davide Di Ruscio and Ludovico Iovino and Alfonso Pierantonio},
   url = {\url{https://doi.org/10.1007/S10009-022-00646-2}},
   issn = {14332787},
   issue = {2},
   journal = {International Journal on Software Tools for Technology Transfer},
   keywords = {Metamodel evolution,Model-driven engineering,Parallel evolution,Safe evolution},
   month = {4},
   pages = {247-260},
   publisher = {Springer Science and Business Media Deutschland GmbH},
   title = {Supporting safe metamodel evolution with edelta},
   volume = {24},
   year = {2022},
}

@article{Bettini2020,
   author = {Lorenzo Bettini and Davide Di Ruscio and Ludovico Iovino and Alfonso Pierantonio},
   url = {\url{https://doi.org/10.1145/3417990.3419501}},
   isbn = {9781450381352},
   journal = {Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020 - Companion Proceedings},
   keywords = {Edelta,Evolution,Metamodels,Refactoring},
   month = {10},
   pages = {324-333},
   publisher = {Association for Computing Machinery, Inc},
   title = {Edelta 2.0: Supporting live metamodel evolutions},
   year = {2020},
}
@article{Bettini2022,
   author = {Lorenzo Bettini and Davide Di Ruscio and Ludovico Iovino and Alfonso Pierantonio},
   url = {\url{https://doi.org/10.1007/S10270-022-01034-9}},
   issn = {16191374},
   issue = {5},
   journal = {Software and Systems Modeling},
   keywords = {Catalog,Evolution,Metamodels,Refactoring},
   month = {10},
   pages = {1689-1709},
   publisher = {Springer Science and Business Media Deutschland GmbH},
   title = {An executable metamodel refactoring catalog},
   volume = {21},
   year = {2022},
}
@article{Klare2021,
   author = {Heiko Klare and Max E. Kramer and Michael Langhammer and Dominik Werle and Erik Burger and Ralf Reussner},
   url = {\url{https://doi.org/10.1016/J.JSS.2020.110815}},
   issn = {0164-1212},
   journal = {Journal of Systems and Software},
   month = {1},
   pages = {110--815},
   publisher = {Elsevier},
   title = {{Enabling Consistency in View-Based System Development â€” The Vitruvius Approach}},
   volume = {171},
   year = {2021},
}

@InProceedings{Atkinson2010,
author="Atkinson, Colin
and Stoll, Dietmar
and Bostan, Philipp",
editor="Maciaszek, Leszek A.
and Gonz{\'a}lez-P{\'e}rez, C{\'e}sar
and Jablonski, Stefan",
title="Orthographic Software Modeling: A Practical Approach to View-Based Development",
booktitle="Evaluation of Novel Approaches to Software Engineering",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="206--219",
abstract="Although they are significantly different in how they decompose and conceptualize software systems, one thing that all advanced software engineering paradigms have in common is that they increase the number of different views involved in visualizing a system. Managing these different views can be challenging even when a paradigm is used independently, but when they are used together the number of views and inter-dependencies quickly becomes overwhelming. In this paper we present a novel approach for organizing and generating the different views used in advanced software engineering methods that we call Orthographic Software Modeling (OSM). This provides a simple metaphor for integrating different development paradigms and for leveraging domain specific languages in software engineering. Development environments that support OSM essentially raise the level of abstraction at which developers interact with their tools by hiding the idiosyncrasies of specific editors, storage choices and artifact organization policies. The overall benefit is to significantly simplify the use of advanced software engineering methods.",
isbn="978-3-642-14819-4"}

